import FinanceDataReader as fdr                                 # FinanceDataReader 라는 라이브러리를 씀


df = fdr.DataReader("005930", "2017")                           # fdr.DataReader('종목코드', 'yyyy-mm-dd')로 현재 일자까지의 주가정보를 불러올 수 있음


df['Close'].plot(figsize = (12, 6))                             # 종가(Close) 컬럼의 데이터를 시각화


df_krx = fdr.StockListing('KRX')                                # StockListing으로 KRX 데이터 불러오기.


df_krx.loc[df_krx["Name"] == '하이브', 'Symbol'].tolist()[0]     # loc로 ['Name']컬럼에서 '하이브'와 일치하는 행을 찾고, Symbol만 추출함.
                                                                # tolist()로 Symbol을 리스트형태로 바꾸고, [0]으로 출력.
                                                                

def item_code_by_item_name(item_name):                                               # 종목명 받아서 종목코드로 변환시켜주는 함수를 정의해버림(매번 코드짜기 귀찮으니까!)
    symbol = df_krx.loc[df_krx['Name'] == item_name, 'Symbol'].tolist()              # item_name = 종목명 , item_code = 종목코드, item_code_by_item_name(item_name) = 함수
    if len(symbol) > 0:                                                              # ['Name']컬럼에서 종목명 검색 후 'Symbol'만 추출후 시리즈 형태로 만듬
        item_code = symbol[0]                                                        # 시리즈의 길이가 0보다 크면 -> [0]번째를 추출해서 item_code로 변수할당
    return item_code


def find_item_list(item_name, year=2020):                                             # 종목명 받아서 해당 년도 시세 데이터를 DataFrame으로 출력하는 함수 find_item_list
    df_day = fdr.DataReader(item_code_by_item_name(item_name), str(year))             # DataReader로 위에서 지정한 함수 item_code_by_item_name(item_name)로 종목코드 가져옴.
    return df_day                                                                     # str(year)로 년도 문자열 출력
    
    
    
df_LG = find_item_list('LG화학', year=2020)                                           # 위 함수를 써서 LG화학의 2020년 시세 데이터를 DataFrame으로 출력해 df_LG 변수에 담음
df_LG['Close'].describe()                                                             # 'Close' 컬럼의 기술통계값 출력
